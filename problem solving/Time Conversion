####################################################################################
비효율적인 코드

#!/bin/python3

import os
import sys

#
# Complete the timeConversion function below.
#
def timeConversion(s):
    #
    # Write your code here.
    #
    if s[-2:]=='PM':
        if s[:2]=='12':
            return s[:8]
        else:
            a=s[:8].split(":")
            a[0]=str(int(s[:2])+12)
            return ':'.join(a)
    else :
        if s[:2]=='12':
            a=s[:8].split(":")
            a[0]="00"
            return ':'.join(a)
        return s[:8]
    

if __name__ == '__main__':
    f = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = timeConversion(s)

    f.write(result + '\n')

    f.close()
    
########################################################################################################
효율적인 코드

-map으로 각 객체에 매핑
-%12로 자정과 정오 구분
-%로 효율적인 반환
    
#!/bin/python3

import os
import sys

#
# Complete the timeConversion function below.
#
def timeConversion(s):
    #
    # Write your code here.
    #
    hour, mt, sec = map(int, s[:-2].split(':'))
    p = s[-2:]
    hour = hour % 12 + (p.upper() == 'PM') * 12
    return ('%02d:%02d:%02d') % (hour, mt, sec)
    

if __name__ == '__main__':
    f = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = timeConversion(s)

    f.write(result + '\n')

    f.close()

